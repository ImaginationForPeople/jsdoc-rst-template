<?js
var self = this;
var partial = this.partial.bind(this);
var formatTextWithTabs = this.formatTextWithTabs.bind(this);
var description = obj.description || "";
var fields = self.partial('fields.tmpl', obj);
var examples = obj.examples;
var attributes = self.find({kind: 'member', memberof: obj.longname});
var methods = self.find({kind: 'function', memberof: obj.longname});
var tabs = 1;

var qualname = obj.longname.split('.');
var classname = qualname.pop();
var modulename = qualname.join('/');
var importSig = '.. code-block:: js\n\n' + self.tab +
                'var ' + classname + ' = require(\'' + modulename + '\').'+ classname;

?>
.. class:: <?js= obj.name ?> <?js= obj.signature ?>

<?js
if(description){
    print(self.formatTextWithTabs(description, tabs) + '\n\n');
}



if(fields){
    print(self.formatTextWithTabs(fields, tabs) + '\n');
}

if(examples && examples.length && examples.forEach){
    examples.forEach(function(ex){
        ex.formatTextWithTabs = formatTextWithTabs;
        var str = self.partial('example.tmpl', ex).trim();
        print(self.formatTextWithTabs(str, tabs) + '\n\n');
    });
}

if (attributes && attributes.length && attributes.forEach) {
    attributes.forEach(function(attribute) {
        attribute.partial = partial
        attribute.formatTextWithTabs = formatTextWithTabs;
        var str = self.partial('attribute.tmpl', attribute).trim();
        print(self.formatTextWithTabs(str, tabs) + '\n');
    });
}

if (methods && methods.length && methods.forEach) {
    methods.forEach(function(method){
        method.partial = partial
        method.formatTextWithTabs = formatTextWithTabs;
        var str = self.partial('method.tmpl', method).trim();
        print(self.formatTextWithTabs(str, tabs) + '\n');
    });
}
?>
